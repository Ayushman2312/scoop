# Generated by Django 5.2.1 on 2025-06-03 10:45

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('blog', '0003_trendingtopic_is_fallback'),
    ]

    operations = [
        migrations.AddField(
            model_name='blogpost',
            name='fresh_approach',
            field=models.CharField(blank=True, help_text='The approach used for creating fresh content', max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='blogpost',
            name='is_fresh_variant',
            field=models.BooleanField(default=False, help_text='Indicates if this post is a fresh variant of a duplicate topic'),
        ),
        migrations.CreateModel(
            name='TopicFreshnessLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keyword', models.CharField(max_length=255)),
                ('first_occurrence', models.DateTimeField(auto_now_add=True, help_text='When the topic was first seen')),
                ('last_occurrence', models.DateTimeField(auto_now=True, help_text='When the topic was most recently seen')),
                ('occurrence_count', models.IntegerField(default=1, help_text='How many times this topic has appeared')),
                ('strategy_applied', models.CharField(choices=[('different_angle', 'Different Angle/Perspective'), ('new_template', 'New Template Type'), ('alternative_topic', 'Alternative Topic Selected'), ('latest_data', 'Latest Data/Trends/Statistics'), ('audience_shift', 'Different Audience Targeting'), ('none', 'No Strategy Applied')], default='none', max_length=50)),
                ('strategy_notes', models.TextField(blank=True, null=True)),
                ('strategy_success_score', models.IntegerField(default=0, help_text='Score indicating how successful the strategy was (0-100)')),
                ('seo_impact', models.IntegerField(default=0, help_text='Impact on SEO performance (-100 to 100)')),
                ('engagement_lift', models.FloatField(default=0.0, help_text='Percentage lift in engagement compared to previous content')),
                ('related_blog_posts', models.ManyToManyField(blank=True, related_name='freshness_logs', to='blog.blogpost')),
            ],
            options={
                'ordering': ['-last_occurrence'],
                'indexes': [models.Index(fields=['keyword'], name='blog_topicf_keyword_cb97aa_idx'), models.Index(fields=['last_occurrence'], name='blog_topicf_last_oc_b74c7b_idx')],
            },
        ),
    ]
